float MELLVL = CalculateAILevel(agent, meleeSkill);
float EFFLVL = CalculateAILevel(agent, effectiveSkill);
float DEF = MELLVL + agent.Defensiveness;
float INVEFFLVL = 1f - EFFLVL;
AiRangedHorsebackMissileRange = 0.3f + 0.4f * EFFLVL;
AiFacingMissileWatch = -0.96f + MELLVL * 0.06f;
AiFlyingMissileCheckRadius = 8f - 6f * MELLVL;
AiShootFreq = 0.3f + 0.7f * EFFLVL;
AiWaitBeforeShootFactor = (agent.PropertyModifiers.resetAiWaitBeforeShootFactor ? 0f : (1f - 0.5f * EFFLVL));
AIBlockOnDecideAbility = MBMath.Lerp(0.25f, 0.99f, MBMath.ClampFloat(MELLVL, 0f, 1f));
AIParryOnDecideAbility = MBMath.Lerp(0.01f, 0.95f, MBMath.ClampFloat(MathF.Pow(MELLVL, 1.5f), 0f, 1f));
AiTryChamberAttackOnDecide = (MELLVL - 0.15f) * 0.1f;
AIAttackOnParryChance = 0.3f - 0.1f * agent.Defensiveness;
AiAttackOnParryTiming = -0.2f + 0.3f * MELLVL;
AIDecideOnAttackChance = 0.15f * agent.Defensiveness;
AIParryOnAttackAbility = MBMath.ClampFloat(MELLVL * MELLVL * MELLVL, 0f, 1f);
AiKick = -0.1f + ((MELLVL > 0.4f) ? 0.4f : MELLVL);
AiAttackCalculationMaxTimeFactor = MELLVL;
AiDecideOnAttackWhenReceiveHitTiming = -0.25f * (1f - MELLVL);
AiDecideOnAttackContinueAction = -0.5f * (1f - MELLVL);
AiDecideOnAttackingContinue = 0.1f * MELLVL;
AIParryOnAttackingContinueAbility = MBMath.Lerp(0.05f, 0.95f, MBMath.ClampFloat(MELLVL * MELLVL * MELLVL, 0f, 1f));
AIDecideOnRealizeEnemyBlockingAttackAbility = 0.5f * MBMath.ClampFloat(MathF.Pow(MELLVL, 2.5f) - 0.1f, 0f, 1f);
AIRealizeBlockingFromIncorrectSideAbility = 0.5f * MBMath.ClampFloat(MathF.Pow(MELLVL, 2.5f) - 0.1f, 0f, 1f);
AiAttackingShieldDefenseChance = 0.2f + 0.3f * MELLVL;
AiAttackingShieldDefenseTimer = -0.3f + 0.3f * MELLVL;
AiRandomizedDefendDirectionChance = 1f - MathF.Log(MELLVL * 7f + 1f, 2f) * 0.33333f;
AiShooterError = 0.008f;
AISetNoAttackTimerAfterBeingHitAbility = MBMath.ClampFloat(MELLVL * MELLVL, 0.05f, 0.95f);
AISetNoAttackTimerAfterBeingParriedAbility = MBMath.ClampFloat(MELLVL * MELLVL, 0.05f, 0.95f);
AISetNoDefendTimerAfterHittingAbility = MBMath.ClampFloat(MELLVL * MELLVL, 0.05f, 0.95f);
AISetNoDefendTimerAfterParryingAbility = MBMath.ClampFloat(MELLVL * MELLVL, 0.05f, 0.95f);
AIEstimateStunDurationPrecision = 1f - MBMath.ClampFloat(MELLVL * MELLVL, 0.05f, 0.95f);
AIHoldingReadyMaxDuration = MBMath.Lerp(0.25f, 0f, MathF.Min(1f, MELLVL * 1.2f));
AIHoldingReadyVariationPercentage = MELLVL;
AiRaiseShieldDelayTimeBase = -0.75f + 0.5f * MELLVL;
AiUseShieldAgainstEnemyMissileProbability = 0.1f + MELLVL * 0.6f + DEF * 0.2f;
AiCheckMovementIntervalFactor = 0.005f * (1.1f - MELLVL);
AiMovementDelayFactor = 4f / (3f + EFFLVL);
AiParryDecisionChangeValue = 0.05f + 0.7f * MELLVL;
AiDefendWithShieldDecisionChanceValue = MathF.Min(1f, 0.2f + 0.5f * MELLVL + 0.2f * DEF);
AiMoveEnemySideTimeValue = -2.5f + 0.5f * MELLVL;
AiMinimumDistanceToContinueFactor = 2f + 0.3f * (3f - MELLVL);
AiHearingDistanceFactor = 1f + MELLVL;
AiChargeHorsebackTargetDistFactor = 1.5f * (3f - MELLVL);
AiWaitBeforeShootFactor = (agent.PropertyModifiers.resetAiWaitBeforeShootFactor ? 0f : (1f - 0.5f * EFFLVL));
AiRangerLeadErrorMin = (0f - INVEFFLVL) * 0.35f;
AiRangerLeadErrorMax = INVEFFLVL * 0.2f;
AiRangerVerticalErrorMultiplier = INVEFFLVL * 0.1f;
AiRangerHorizontalErrorMultiplier = INVEFFLVL * ((float)Math.PI / 90f);
AIAttackOnDecideChance = MathF.Clamp(0.23f * CalculateAIAttackOnDecideMaxValue() * (3f - agent.Defensiveness), 0.05f, 1f);
SetStat(DrivenProperty.UseRealisticBlocking, (agent.Controller != Agent.ControllerType.Player) ? 1f : 0f);